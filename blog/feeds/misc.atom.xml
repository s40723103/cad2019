<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>cad2019 40723103 - Misc</title><link href="./" rel="alternate"></link><link href=".%5Cfeeds/misc.atom.xml" rel="self"></link><id>./</id><updated>2019-11-08T11:00:00+08:00</updated><entry><title>40723103網頁報告</title><link href=".%5C2018-Fall-32-bit-Windows.html" rel="alternate"></link><published>2019-11-08T11:00:00+08:00</published><updated>2019-11-08T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:None,2019-11-08:.\2018-Fall-32-bit-Windows.html</id><summary type="html">&lt;p&gt;報告繳交&lt;/p&gt;
&lt;p&gt;班級四設計二甲&lt;/p&gt;
&lt;p&gt;學號40723103&lt;/p&gt;
&lt;h2&gt;期中網址:&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=KCq9y73_UIY&amp;t=8s"&gt;https://www.youtube.com/watch?v=KCq9y73_UIY&amp;amp;t=8s&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;倉儲網站&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://s40723103.github.io/cad2019/"&gt;https://s40723103.github.io//&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;期中總結&lt;/h2&gt;
&lt;p&gt;在這九週裡初步建立倉儲與編譯動作時花了不少時間在調查之中的錯誤與處理其中的問題。&lt;/p&gt;
&lt;p&gt;並在之後需要solvespace操作時也摸索一段時間才真正稍微能抓到一些訣竅，與v-rep軟體結合後使得機構作動步驟也在接觸的過程中又所收穫和使用心得。&lt;/p&gt;
&lt;p&gt;嚴格來說，老師的教學方式雖然仔細，但對於某些學生來說則是無法跟上或是專業術語太多的情況，在這兩者之中取捨與調配輕重方面可能還需待請老師能重新審視。&lt;/p&gt;
&lt;p&gt;整體而言由於自身操作或是檔案方面導致錯誤的情形層出不窮，也逐漸讓我了解到一些處理相似情形的解決能力，儘管可能在老師眼中這些不能等同於所謂的專業技術'，但多少有所吸收並獲得在這領域方面的技能，例如:編譯時出現的程式錯誤，倉儲建立某部分模組移位導致開啟失敗，使用solvespace操作指令快捷鍵與限制圖形，v-rep操作等等...&lt;/p&gt;
&lt;h2&gt;組別(第五組)&lt;/h2&gt;
&lt;p&gt;40523113 吳宜賢&lt;/p&gt;
&lt;p&gt;40623252 李展齊&lt;/p&gt;
&lt;p&gt;40723101 沈易萱&lt;/p&gt;
&lt;p&gt;40723103 林晏瑩&lt;/p&gt;
&lt;p&gt;40723107 王晨佑&lt;/p&gt;
&lt;p&gt;40723114 杜永瀚&lt;/p&gt;
&lt;p&gt;40723119 林哲緯&lt;/p&gt;
&lt;p&gt;40723122 施東勝&lt;/p&gt;
&lt;p&gt;40723124 徐敬倫&lt;/p&gt;
&lt;p&gt;40723125 張詠全&lt;/p&gt;
&lt;p&gt;40723152 陳俊任&lt;/p&gt;
&lt;p&gt;40723155 吳明峰&lt;/p&gt;
&lt;h2&gt;每周進度&lt;/h2&gt;
&lt;h2&gt;week2&lt;/h2&gt;
&lt;p&gt;課程內容說明、亂數分組、建立各學員網站&lt;/p&gt;
&lt;h2&gt;week3&lt;/h2&gt;
&lt;p&gt;任務一 Solvespace 編譯與參數繪圖應用說明&lt;/p&gt;
&lt;h2&gt;week5&lt;/h2&gt;
&lt;p&gt;Solvespace 編譯與參數繪圖示範&lt;/p&gt;
&lt;h2&gt;week6&lt;/h2&gt;
&lt;p&gt;V-rep 網際雙輪車控制模擬示範&lt;/p&gt;
&lt;h2&gt;week7&lt;/h2&gt;
&lt;p&gt;統一網站架構, Solvespace 編譯與繪圖驗證&lt;/p&gt;
&lt;h2&gt;week8&lt;/h2&gt;
&lt;p&gt;Solvespace 與 V-rep 應用, 雙輪車與行走機構&lt;/p&gt;
&lt;h2&gt;week9&lt;/h2&gt;
&lt;p&gt;期中考週 - 任務一驗證, 學員 reveal 期中簡報&lt;/p&gt;
</summary><content type="html">&lt;p&gt;報告繳交&lt;/p&gt;
&lt;p&gt;班級四設計二甲&lt;/p&gt;
&lt;p&gt;學號40723103&lt;/p&gt;
&lt;h2&gt;期中網址:&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=KCq9y73_UIY&amp;t=8s"&gt;https://www.youtube.com/watch?v=KCq9y73_UIY&amp;amp;t=8s&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;倉儲網站&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://s40723103.github.io/cad2019/"&gt;https://s40723103.github.io//&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;期中總結&lt;/h2&gt;
&lt;p&gt;在這九週裡初步建立倉儲與編譯動作時花了不少時間在調查之中的錯誤與處理其中的問題。&lt;/p&gt;
&lt;p&gt;並在之後需要solvespace操作時也摸索一段時間才真正稍微能抓到一些訣竅，與v-rep軟體結合後使得機構作動步驟也在接觸的過程中又所收穫和使用心得。&lt;/p&gt;
&lt;p&gt;嚴格來說，老師的教學方式雖然仔細，但對於某些學生來說則是無法跟上或是專業術語太多的情況，在這兩者之中取捨與調配輕重方面可能還需待請老師能重新審視。&lt;/p&gt;
&lt;p&gt;整體而言由於自身操作或是檔案方面導致錯誤的情形層出不窮，也逐漸讓我了解到一些處理相似情形的解決能力，儘管可能在老師眼中這些不能等同於所謂的專業技術'，但多少有所吸收並獲得在這領域方面的技能，例如:編譯時出現的程式錯誤，倉儲建立某部分模組移位導致開啟失敗，使用solvespace操作指令快捷鍵與限制圖形，v-rep操作等等...&lt;/p&gt;
&lt;h2&gt;組別(第五組)&lt;/h2&gt;
&lt;p&gt;40523113 吳宜賢&lt;/p&gt;
&lt;p&gt;40623252 李展齊&lt;/p&gt;
&lt;p&gt;40723101 沈易萱&lt;/p&gt;
&lt;p&gt;40723103 林晏瑩&lt;/p&gt;
&lt;p&gt;40723107 王晨佑&lt;/p&gt;
&lt;p&gt;40723114 杜永瀚&lt;/p&gt;
&lt;p&gt;40723119 林哲緯&lt;/p&gt;
&lt;p&gt;40723122 施東勝&lt;/p&gt;
&lt;p&gt;40723124 徐敬倫&lt;/p&gt;
&lt;p&gt;40723125 張詠全&lt;/p&gt;
&lt;p&gt;40723152 陳俊任&lt;/p&gt;
&lt;p&gt;40723155 吳明峰&lt;/p&gt;
&lt;h2&gt;每周進度&lt;/h2&gt;
&lt;h2&gt;week2&lt;/h2&gt;
&lt;p&gt;課程內容說明、亂數分組、建立各學員網站&lt;/p&gt;
&lt;h2&gt;week3&lt;/h2&gt;
&lt;p&gt;任務一 Solvespace 編譯與參數繪圖應用說明&lt;/p&gt;
&lt;h2&gt;week5&lt;/h2&gt;
&lt;p&gt;Solvespace 編譯與參數繪圖示範&lt;/p&gt;
&lt;h2&gt;week6&lt;/h2&gt;
&lt;p&gt;V-rep 網際雙輪車控制模擬示範&lt;/p&gt;
&lt;h2&gt;week7&lt;/h2&gt;
&lt;p&gt;統一網站架構, Solvespace 編譯與繪圖驗證&lt;/p&gt;
&lt;h2&gt;week8&lt;/h2&gt;
&lt;p&gt;Solvespace 與 V-rep 應用, 雙輪車與行走機構&lt;/p&gt;
&lt;h2&gt;week9&lt;/h2&gt;
&lt;p&gt;期中考週 - 任務一驗證, 學員 reveal 期中簡報&lt;/p&gt;


&lt;h2&gt;電腦規格&lt;/h2&gt;
&lt;p&gt;目前系上已經沒有 32 位元 Windows 操作系統的電腦, 所以先前只要有學生提到所使用的電腦是舊型 32 位元的 Windows XP 或 Windows 7, 都無法提供相應的可攜程式系統.&lt;/p&gt;
&lt;p&gt;但是, 當您桌上就只一台早期 Sony 推出的 VGC-LM26T 電腦, 採用 Intel core 2 Duo T8100 2.1 GHz 裝載 32 位元 Windows 7, 記憶體只有 2GB 的老舊電腦.&lt;/p&gt;
&lt;p&gt;夠用嗎?&lt;/p&gt;
&lt;p&gt;當然可以, 使用的是特別製作的 &lt;a href="https://mde1a1.kmol.info/2017fall/raw/p37_32.7z?name=c272a694f98180f8d1272b43f7d7b4fdd8f7f550"&gt;32 位元可攜系統&lt;/a&gt;, 除了不支援 Eric6 之外, 其餘功能都與 64 位元的  &lt;a href="https://drive.google.com/file/d/1DWtyoUhl8CycKJ8uulB3viRXE39KqpE1/view?usp=sharing"&gt;p37&lt;/a&gt; 相同.&lt;/p&gt;
&lt;h2&gt;工作流程&lt;/h2&gt;
&lt;p&gt;從 2018 Fall 開始, 前半學期希望每位計算機程課程的學員, 都能透過 &lt;a href="http://mde.tw/cp2018/content/"&gt;2018 計算機程式教材&lt;/a&gt; 內容, 深入學習 Python 3 各種程式語法, 利用 &lt;a href="https://github.com/chiamingyen/cmsimfly"&gt;CMSimfly&lt;/a&gt;、&lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt; 與 &lt;a href="https://revealjs.com/"&gt;Reveal.js&lt;/a&gt;, 熟悉如何在 &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; 配置自己的網站、網誌與網際簡報系統.&lt;/p&gt;
&lt;p&gt;使用時, 啟動隨身系統的 start.bat, 利用命令列指令, git clone https://github.com/mdecourse/2018fall, 然後將內容配置在各自的 &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; 帳號下.&lt;/p&gt;
&lt;h2&gt;程式專案&lt;/h2&gt;
&lt;p&gt;早在 1999 年, 就已經開始進行所謂&lt;a href="https://webcache.googleusercontent.com/search?q=cache:sqYPNC8_mgoJ:https://www.most.gov.tw/sci/ch/detail%3Farticle_uid%3D4ee546e6-73fa-43a8-b1df-a5a0a1fe1824%26menu_id%3D0bac23e6-b3df-4fe0-b152-2e1050eb2f2c%26content_type%3DP%26view_mode%3DlistView+&amp;amp;cd=6&amp;amp;hl=zh-TW&amp;amp;ct=clnk&amp;amp;gl=tw"&gt;網際機械設計資源中心&lt;/a&gt;的構建, 想像中的資源中心是一套網際專家系統, 包含各式機械設計流程中所需的模組, 全部依附在一個相對穩定, 可以持續改進的核心架構下, 類似 &lt;a href="https://github.com/jhpyle/docassemble"&gt;docassemble&lt;/a&gt; 的一套系統.&lt;/p&gt;
&lt;p&gt;將近二十年過去, &lt;a href="https://webcache.googleusercontent.com/search?q=cache:sqYPNC8_mgoJ:https://www.most.gov.tw/sci/ch/detail%3Farticle_uid%3D4ee546e6-73fa-43a8-b1df-a5a0a1fe1824%26menu_id%3D0bac23e6-b3df-4fe0-b152-2e1050eb2f2c%26content_type%3DP%26view_mode%3DlistView+&amp;amp;cd=6&amp;amp;hl=zh-TW&amp;amp;ct=clnk&amp;amp;gl=tw"&gt;網際機械設計資源中心&lt;/a&gt;始終仍只有片段系統, 其中包含 &lt;a href="https://github.com/chiamingyen/cmsimfly"&gt;CMSimfly&lt;/a&gt;、&lt;a href="https://github.com/chiamingyen/pygrouf"&gt;Pygrouf&lt;/a&gt; 與 &lt;a href="https://github.com/KmolYuan/Pyslvs-PyQt5"&gt;Pyslvs&lt;/a&gt; (&lt;a href="http://www.pyslvs.com/content/"&gt;Pyslvs 手冊&lt;/a&gt;)等相關專案.&lt;/p&gt;
&lt;p&gt;就如同&lt;a href="http://blog.ez2learn.com/2009/06/27/how-to-write-useful-program/"&gt;如何寫出有用的程式?&lt;/a&gt; 一文中所述, "沒有興趣不要來念資工" 是一句非常貼切的警語, 當學生對於程式設計提不起興趣, 沒有將所學的各式語法、資料結構與演算法, 套用在自己非常有興趣的領域中, 用來解決各式問題的話, 日復一日, 我們還是寫不出任何有用的程式!&lt;/p&gt;
&lt;h2&gt;早該起頭的重要工作&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.quora.com/Why-is-programming-so-important-in-the-modern-world"&gt;計算機程式的重要性&lt;/a&gt;其實已經無需爭辯, 人類未來的許多工作都是透過網路與數位運算達成, 既知趨勢如此, 每一位工程師就該越早起頭原本就該進行的重要工作, 透過計算機程式來解決問題, 構築一個值得長期投注心力的程式專案.&lt;/p&gt;</content><category term="2018FallCP"></category></entry></feed>