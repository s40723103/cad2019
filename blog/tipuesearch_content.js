var tipuesearch = {"pages":[{"title":"About","text":"CMSimfly 內容管理網誌 課程倉儲: https://github.com/chiamingyen/cmsimfly 內容管理: https://chiamingyen.github.io/cmsimfly/ 課程投影片: https://chiamingyen.github.io/cmsimfly/reveal 課程網誌: https://chiamingyen.github.io/cmsimfly/blog 期中影片網址: https://www.youtube.com/watch?v=KCq9y73_UIY&t=8s","tags":"misc","url":"./pages/about/"},{"title":"40723103網頁報告","text":"報告繳交 班級四設計二甲 學號40723103 期中網址: https://www.youtube.com/watch?v=KCq9y73_UIY&t=8s 倉儲網站 https://s40723103.github.io// 期中總結 在這九週裡初步建立倉儲與編譯動作時花了不少時間在調查之中的錯誤與處理其中的問題。 並在之後需要solvespace操作時也摸索一段時間才真正稍微能抓到一些訣竅，與v-rep軟體結合後使得機構作動步驟也在接觸的過程中又所收穫和使用心得。 嚴格來說，老師的教學方式雖然仔細，但對於某些學生來說則是無法跟上或是專業術語太多的情況，在這兩者之中取捨與調配輕重方面可能還需待請老師能重新審視。 整體而言由於自身操作或是檔案方面導致錯誤的情形層出不窮，也逐漸讓我了解到一些處理相似情形的解決能力，儘管可能在老師眼中這些不能等同於所謂的專業技術'，但多少有所吸收並獲得在這領域方面的技能，例如:編譯時出現的程式錯誤，倉儲建立某部分模組移位導致開啟失敗，使用solvespace操作指令快捷鍵與限制圖形，v-rep操作等等... 組別(第五組) 40523113 吳宜賢 40623252 李展齊 40723101 沈易萱 40723103 林晏瑩 40723107 王晨佑 40723114 杜永瀚 40723119 林哲緯 40723122 施東勝 40723124 徐敬倫 40723125 張詠全 40723152 陳俊任 40723155 吳明峰 每周進度 week2 課程內容說明、亂數分組、建立各學員網站 week3 任務一 Solvespace 編譯與參數繪圖應用說明 week5 Solvespace 編譯與參數繪圖示範 week6 V-rep 網際雙輪車控制模擬示範 week7 統一網站架構, Solvespace 編譯與繪圖驗證 week8 Solvespace 與 V-rep 應用, 雙輪車與行走機構 week9 期中考週 - 任務一驗證, 學員 reveal 期中簡報 電腦規格 目前系上已經沒有 32 位元 Windows 操作系統的電腦, 所以先前只要有學生提到所使用的電腦是舊型 32 位元的 Windows XP 或 Windows 7, 都無法提供相應的可攜程式系統. 但是, 當您桌上就只一台早期 Sony 推出的 VGC-LM26T 電腦, 採用 Intel core 2 Duo T8100 2.1 GHz 裝載 32 位元 Windows 7, 記憶體只有 2GB 的老舊電腦. 夠用嗎? 當然可以, 使用的是特別製作的 32 位元可攜系統 , 除了不支援 Eric6 之外, 其餘功能都與 64 位元的 p37 相同. 工作流程 從 2018 Fall 開始, 前半學期希望每位計算機程課程的學員, 都能透過 2018 計算機程式教材 內容, 深入學習 Python 3 各種程式語法, 利用 CMSimfly 、 Pelican 與 Reveal.js , 熟悉如何在 Github 配置自己的網站、網誌與網際簡報系統. 使用時, 啟動隨身系統的 start.bat, 利用命令列指令, git clone https://github.com/mdecourse/2018fall, 然後將內容配置在各自的 Github 帳號下. 程式專案 早在 1999 年, 就已經開始進行所謂 網際機械設計資源中心 的構建, 想像中的資源中心是一套網際專家系統, 包含各式機械設計流程中所需的模組, 全部依附在一個相對穩定, 可以持續改進的核心架構下, 類似 docassemble 的一套系統. 將近二十年過去, 網際機械設計資源中心 始終仍只有片段系統, 其中包含 CMSimfly 、 Pygrouf 與 Pyslvs ( Pyslvs 手冊 )等相關專案. 就如同 如何寫出有用的程式? 一文中所述, \"沒有興趣不要來念資工\" 是一句非常貼切的警語, 當學生對於程式設計提不起興趣, 沒有將所學的各式語法、資料結構與演算法, 套用在自己非常有興趣的領域中, 用來解決各式問題的話, 日復一日, 我們還是寫不出任何有用的程式! 早該起頭的重要工作 計算機程式的重要性 其實已經無需爭辯, 人類未來的許多工作都是透過網路與數位運算達成, 既知趨勢如此, 每一位工程師就該越早起頭原本就該進行的重要工作, 透過計算機程式來解決問題, 構築一個值得長期投注心力的程式專案.","tags":"Misc","url":"./2018-Fall-32-bit-Windows.html"}]};